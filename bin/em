#!/usr/bin/env node
/*
 * commander
 * https://github.com/mattma/ember-rocks
 *
 * Copyright (c) 2014 Matt Ma
 * Licensed under the MIT license.
 */

'use strict';

var program = require('commander'),
    create = require('../src/commands/create'),
    generate = require('../src/commands/generate'),
    commands = require('../src/commands/commands'),
    pkg = require('../package.json');

program
  .version('em-cli ' + pkg.version)
  .usage('[command] [options]\n\n  Command-Specific Help\n\n    em [command] --help');

program
  .command('new')
  .option(
      '-p, --path [path]',
      '# the generator url on web (ex: github.com/mattma/ember-generator)'
  )
  .option(
      '-T, --test',
      '# running in test mode. It won\'s fetch npm or bower packages or init the git repo'
  )
  .description('Creates a new ember application at [dirName]')
  .usage(
      '[ dirName ]  # Make a new directory and Scaffold a new web application' +
      '\n  Ex:    em new my-app'
  )
  .action(create);

program
  .command('gen')
  .alias('generate')
  .description('Generate a new file with ES6 support in the ember app')
  .usage('[type:[name | /nested/folder/to/name]]' +
      '\n\n  @description Generate a new file located app/[type]/[name].js' +
      '\n\n  @arg type: \'component\', \'controller\', \'helper\', \'model\', ' +
      '\'route\', \'template\', \'view\', \'mixin\', \'adapter\'' +
      '\n  @arg name:  any string, or use \'/\'' +
      ' separated string to create a nested folder structure' +
      '\n\n  Ex:  em gen route(s):post           # Generated  app/routes/post.js' +
      '\n  Ex:  em gen route(s):posts/awesome  # Generated  app/routes/posts/awesome.js' +
      '\n  Ex:  em gen template(s):posts/post  # Generated  app/templates/posts/post.hbs' +
      '\n  Ex:  em gen template(s):component(s)/x-foo' +
      ' # Generated  app/templates/components/x-foo.hbs')
  .action(generate);

program
  .command('serve')
  .description('Builds and serves your app, rebuilding on file changes.')
  // \n  Ex:    em new my-app
  //.usage('[ dirName ]  # Make a new directory and Scaffold a new web application')
  .action(commands);

program
  .command('build')
  .description('Release your app and places it into the output path \'~/build\'')
  .action(commands);

// must be before .parse() since node's emit() is immediate
program.on('--help', function(){
  console.log('  Examples:');
  console.log('');
  console.log('    $ em new [dirName]' +
    '\n\n      @description Scaffold a node.js server-side app and an Ember.js client-side app' +
    '\n\n      @example  em new my-app && cd my-app');
  console.log('');
  console.log('    $ em new [dirName] -p git_public_url' +
    '\n\n      @description Do same things above and fetch an Ember app boilerplate ' +
                  'from custom git repo' +
    '\n\n      @example  em new my-app -p github.com/mattma/ember-generator');
  console.log('');
  console.log('    $ em gen [type:[name | /nested/folder/to/name]]' +
    '\n\n      @description Generate a new file ember app folder' +
    '\n\n      @example  em gen route:post  =>  client/app/routes/post.js' +
    '\n      @example  em gen route(s):posts/awesome  =>  app/routes/posts/awesome.js' +
    '\n      @example  em gen component(s)/x-foo  =>  app/components/x-foo.js');
  console.log('');
});

program.parse(process.argv);
