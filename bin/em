#!/usr/bin/env node
/*
 * commander
 * https://github.com/mattma/ember-rocks
 *
 * Copyright (c) 2014 Matt Ma
 * Licensed under the MIT license.
 */

'use strict';

var program = require('commander'),
    create = require('../src/commands/create'),
    generate = require('../src/commands/generate'),
    pkg = require('../package.json');

var output, outputStdout;

outputStdout = function(data) {
	console.log(data.toString('utf8').trim());
};

output = function(proc) {
	proc.stdout.on('data', function(data) {
		return outputStdout(data);
	});
	proc.stderr.on('data', function(data) {
		return outputStdout(data);
	});
};

program
	.version('em-cli ' + pkg.version)
  .usage("[command] [options]\n\n  Command-Specific Help\n\n    em [command] --help");

program
  .command('new')
  .option('-p, --path [path]', '# the generator url on web (ex: github.com/mattma/ember-generator)')
  .option('-T, --test', '# running in test mode. It won\'s fetch npm or bower packages or init the git repo')
  .description('Creates a new ember application at [dirName]')
  .usage('[ dirName ]  # Make a new directory and Scaffold a new web application \n  Ex:    em new my-app')
  .action(create);

program
  .command('gen')
  //.option('-p, --path [path]', '# the generator url on web (ex: github.com/mattma/ember-generator)')
  .description('Generate a new file with ES6 support in the ember app')
  .usage('[ type:name(/nested/folder/fileName) ]      # Generate a new file located app/routes/post.js' +
         "\n " +
         "\n  @arg   type:  'component', 'controller', 'helper', 'model', 'route', 'template', 'view', 'mixin', 'adapter'" +
         "\n  @arg   name:  any string, or use '/' separated string to create a nested folder structure" +
         "\n " +
         '\n  Ex:    em gen route(s):post           # Generate a path  app/routes/post.js' +
         '\n  Ex:    em gen route(s):posts/awesome  # Generate a path  app/routes/posts/awesome.js' +
         '\n  Ex:    em gen template(s):posts/post  # Generate a path  app/templates/posts/post.hbs' +
         '\n  Ex:    em gen template(s):component(s)/x-foo  # Generate a path  app/templates/components/x-foo.hbs')
  .action(generate);

// must be before .parse() since node's emit() is immediate
program.on('--help', function(){
	console.log('  Examples:');
	console.log('');
	console.log('    $ em new [dirName]  # Scaffold a node.js server-side app and an Ember.js client-side app (ex: em gen my-app && cd my-app)');
	console.log('');
  console.log('    $ em gen [type:name(nested/path/to/name)]  # Generate a new file ember app folder (ex: em gen route:post => client/app/routes/post.js)');
	console.log('');
});

program.parse(process.argv);
